
Перем мДекоратор;

#Область _// ПРЕДОПРЕДЕЛЕННЫЕ МЕТОДЫ

Функция ПолучитьСписокТестов(Браузер) Экспорт
	ВсеТесты = Новый Массив;
	
	Инициализация(Браузер);
	
	ТаблицаМетодов = мДекоратор.ТестовыеДанные(
												"ТестовыеДанные.ТестируемыеМетоды", 
												ПолучитьМакет("ТестируемыеФункции"));
												
	Для каждого Строка из ТаблицаМетодов Цикл
		Параметр = Новый Структура("Метод,Параметр,Результат");
		ЗаполнитьЗначенияСвойств(Параметр, Строка);
		
		
		ПараметрыТеста = Новый Структура("ПредставлениеТеста,ИмяТеста,Параметр", 
					Строка.Метод, 
					"ТестДолжен_ВызватьТестируемыйМетод", 
					Параметр);
		ВсеТесты.Добавить(ПараметрыТеста);
		
	КонецЦикла;
	ВсеТесты.Добавить("ТестДолжен_ПреобразоватьОбъектВДомИОбратно");

	Возврат ВсеТесты;
КонецФункции

Процедура Инициализация(БраузерОбъект) Экспорт
	
	мДекоратор = БраузерОбъект.ПолучитьКонтекст("Декоратор");
	
КонецПроцедуры

Функция РазрешенСлучайныйПорядокВыполненияТестов() Экспорт
	Возврат Ложь;
КонецФункции



Процедура ПередЗапускомНабораТестов() Экспорт
КонецПроцедуры

Процедура ПередЗапускомТеста() Экспорт
	
	НачатьТранзакцию();
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
	Если ТранзакцияАктивна() Тогда
		ОтменитьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗапускаНабораТестов() Экспорт
КонецПроцедуры
	
#КонецОбласти



#Область _// ТЕСТЫ

Процедура ТестДолжен_ВызватьТестируемыйМетод(Параметры) Экспорт
	
		
	ОжидаемыйРезультат = ПолучитьПараметрПоИмениПеременной(Параметры.Результат);
	ОжидаемыйТип = ТипЗнч(ОжидаемыйРезультат);
	
	Параметр = ПолучитьПараметрПоИмениПеременной(Параметры.Параметр);
	Команда = "Сериализация." + Параметры.Метод + "(Параметр)";
	ФактическийРезультат = Вычислить(Команда);
	
	мДекоратор.ПроверитьТип(ФактическийРезультат, ОжидаемыйТип, "");
		
	
	
КонецПроцедуры
Функция ПолучитьПараметрПоИмениПеременной(ИмяПеременной)
	
	Объект = Новый ТабличныйДокумент;
	
	Сериализатор = Новый СериализаторXDTO(ФабрикаXDTO);
	ОбъектXDTO = Сериализатор.ЗаписатьXDTO(Объект);	
	
	ЗаписьXML = Новый ЗаписьXML; 
	ЗаписьXML.УстановитьСтроку("UTF-8"); 
	ЗаписьXML.ЗаписатьОбъявлениеXML();
	ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, ОбъектXDTO,,,,НазначениеТипаXML.Явное); 
	Строка = ЗаписьXML.Закрыть();

	ЧтениеXML=Новый ЧтениеXML(); 
	ЧтениеXML.УстановитьСтроку(Строка);
	ЧтениеXML.Прочитать();
	
	ПостроительDOM = Новый ПостроительDOM;
	ОбъектDOM = ПостроительDOM.Прочитать(ЧтениеXML);
	
	Возврат Вычислить(ИмяПеременной);
	
КонецФункции

Процедура ТестДолжен_ПреобразоватьОбъектВДомИОбратно() Экспорт
	
	СериализуемыйОбъект = Новый ТаблицаЗначений;
	СериализуемыйОбъект.Колонки.Добавить();
	
	ОбъектДом = Сериализация.Объект_в_DOM(СериализуемыйОбъект);
	
	ДесериализованныйОбъект = Сериализация.DOM_в_объект(ОбъектДом);
	
	мДекоратор.ПроверитьТип(ДесериализованныйОбъект, Тип(СериализуемыйОбъект));
	
КонецПроцедуры

#КонецОбласти

