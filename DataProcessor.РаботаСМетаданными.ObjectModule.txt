
Перем мДекоратор;

#Область _// ПРЕДОПРЕДЕЛЕННЫЕ МЕТОДЫ

Функция ПолучитьСписокТестов(Браузер) Экспорт
	ВсеТесты = Новый Массив;

	ВсеТесты.Добавить("ТестДолжен_ПроверитьФункцию_ИдентификаторПеречисленияПоСсылке");

	Возврат ВсеТесты;
КонецФункции

Процедура Инициализация(БраузерОбъект) Экспорт
	
	мДекоратор = БраузерОбъект.ПолучитьКонтекст("Декоратор");
	
КонецПроцедуры

Функция РазрешенСлучайныйПорядокВыполненияТестов() Экспорт
	Возврат Ложь;
КонецФункции



Процедура ПередЗапускомНабораТестов() Экспорт
КонецПроцедуры

Процедура ПередЗапускомТеста() Экспорт
	
	НачатьТранзакцию();
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
	Если ТранзакцияАктивна() Тогда
		ОтменитьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗапускаНабораТестов() Экспорт
КонецПроцедуры
	
#КонецОбласти



#Область _// ТЕСТЫ

Процедура ТестДолжен_ПроверитьФункцию_ИдентификаторПеречисленияПоСсылке() Экспорт
	
	ОжидаемоеЗначение = "ЗначениеПеречисления1";
	Ссылка = Перечисления.ПеречислениеТест[ОжидаемоеЗначение];
	
	ПолученноеЗначение = РаботаСМетаданными.ИдентификаторПеречисленияПоСсылке(Ссылка);
	
	мДекоратор.ПроверитьРавенство(ОжидаемоеЗначение, ПолученноеЗначение);
	
КонецПроцедуры
	
	
#КонецОбласти

