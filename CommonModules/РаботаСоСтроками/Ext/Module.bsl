
Функция ИзвлечьПодстрокиПоНачалуИОкончанию(ИсходнаяСтрока, НачинаетсяС, ОканчиваетсяНа) Экспорт
	
	СимволПереносаСтроки = Строка(Новый УникальныйИдентификатор);
	КопияИсходнойСтроки = СтрЗаменить(ИсходнаяСтрока, Символы.ПС, СимволПереносаСтроки); // получили текст в одну строку
	
	СимволНачалаПодстроки = СтрЗаменить(НачинаетсяС, Символы.ПС, СимволПереносаСтроки);
	СимволКонцаПодстроки = СтрЗаменить(ОканчиваетсяНа, Символы.ПС, СимволПереносаСтроки);
	КопияИсходнойСтроки = СтрЗаменить(КопияИсходнойСтроки, СимволНачалаПодстроки, Символы.ПС + СимволНачалаПодстроки);
	
	МассивПодстрок = Новый Массив;
	Для сч = 2 По СтрЧислоСтрок(КопияИсходнойСтроки) Цикл
		Подстрока = СтрПолучитьСтроку(КопияИсходнойСтроки, сч);
		Подстрока = СтрЗаменить(Подстрока, СимволКонцаПодстроки, СимволКонцаПодстроки + Символы.ПС);
		Подстрока = СтрПолучитьСтроку(Подстрока, 1);
		Подстрока = СтрЗаменить(Подстрока, СимволПереносаСтроки, Символы.ПС);
		МассивПодстрок.Добавить(Подстрока);
	КонецЦикла;
	
	Возврат МассивПодстрок;
КонецФункции

Функция ВставитьСтрокуПередПодстрокой(ИсходнаяСтрока, ВставляемаяПодстрока, ПодстрокаМаркер) Экспорт
	Возврат СтрЗаменить(ИсходнаяСтрока, ПодстрокаМаркер, ВставляемаяПодстрока + ПодстрокаМаркер);
КонецФункции


// Разбивает строку на несколько строк по разделителю. Разделитель может иметь любую длину.
//
// Параметры:
//  Строка                 - Строка - текст с разделителями;
//  Разделитель            - Строка - разделитель строк текста, минимум 1 символ;
//  ПропускатьПустыеСтроки - Булево - признак необходимости включения в результат пустых строк.
//    Если параметр не задан, то функция работает в режиме совместимости со своей предыдущей версией:
//     - для разделителя-пробела пустые строки не включаются в результат, для остальных разделителей пустые строки
//       включаются в результат.
//     - если параметр Строка не содержит значащих символов или не содержит ни одного символа (пустая строка), то в
//       случае разделителя-пробела результатом функции будет массив, содержащий одно значение "" (пустая строка), а
//       при других разделителях результатом функции будет пустой массив.
//  СокращатьНепечатаемыеСимволы - Булево - сокращать непечатаемые символы по краям каждой из найденных подстрок.
//
// Возвращаемое значение:
//  Массив - массив строк.
//
// Примеры:
//  РазложитьСтрокуВМассивПодстрок(",один,,два,", ",") - возвратит массив из 5 элементов, три из которых  - пустые
//  строки;
//  РазложитьСтрокуВМассивПодстрок(",один,,два,", ",", Истина) - возвратит массив из двух элементов;
//  РазложитьСтрокуВМассивПодстрок(" один   два  ", " ") - возвратит массив из двух элементов;
//  РазложитьСтрокуВМассивПодстрок("") - возвратит пустой массив;
//  РазложитьСтрокуВМассивПодстрок("",,Ложь) - возвратит массив с одним элементом "" (пустой строкой);
//  РазложитьСтрокуВМассивПодстрок("", " ") - возвратит массив с одним элементом "" (пустой строкой);
//
// Примечание:
//  В случаях, когда разделителем является строка из одного символа, и не используется параметр СокращатьНепечатаемыеСимволы,
//  рекомендуется использовать функцию платформы СтрРазделить.
// взято из БСП 23. СтроковыеФункцииКлиентСервер
// 
Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = ",", Знач ПропускатьПустыеСтроки = Неопределено, СокращатьНепечатаемыеСимволы = Ложь) Экспорт
	
	Результат = Новый Массив;
	
	// Для обеспечения обратной совместимости.
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = " ", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда 
			Если Разделитель = " " Тогда
				Результат.Добавить("");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	//
	
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Если СокращатьНепечатаемыеСимволы Тогда
				Результат.Добавить(СокрЛП(Подстрока));
			Иначе
				Результат.Добавить(Подстрока);
			КонецЕсли;
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Если СокращатьНепечатаемыеСимволы Тогда
			Результат.Добавить(СокрЛП(Строка));
		Иначе
			Результат.Добавить(Строка);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 

